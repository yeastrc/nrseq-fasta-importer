<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>nrseq-fasta-importer WebApp</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  <servlet>
    <servlet-name>action</servlet-name>
    <servlet-class>org.apache.struts.action.ActionServlet</servlet-class>
    <init-param>
      <param-name>config</param-name>
      <param-value>/WEB-INF/struts-config.xml</param-value>
    </init-param>
    <init-param>
      <param-name>debug</param-name>
      <param-value>3</param-value>
    </init-param>
    <init-param>
      <param-name>detail</param-name>
      <param-value>3</param-value>
    </init-param>
    <load-on-startup>0</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>action</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>
  

<!--
-->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>NRSEQ FASTA Upload Server</web-resource-name>
			<url-pattern>/*</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<description>Authorized NRSEQ FASTA Upload User</description>
			<role-name>nrseq-fasta-upload-group</role-name>
		</auth-constraint>
	</security-constraint>
	<security-role>
		<role-name>nrseq-fasta-upload-group</role-name>
	</security-role>
	<login-config>
		<auth-method>BASIC</auth-method>
		<realm-name>nrseq-fasta-upload-server</realm-name>
	</login-config>

  <!-- REST Webservices by JAX-RS Jersey Servlet -->
    <servlet>
        <servlet-name>JAX-RS REST Jersey Servlet</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            
            <!-- specifies the packages to scan for Classes that have Jersey annotations for webservices -->
            <!-- Adding "jackson.jaxrs" changes the JSON and JAXB XML provider to Jackson -->
            <param-value>com.fasterxml.jackson.jaxrs;org.yeastrc.nrseq_fasta_importer.www.webservices</param-value>
        </init-param>  
        
        <load-on-startup>1</load-on-startup>
    </servlet>
  
  <servlet-mapping>
  	<servlet-name>JAX-RS REST Jersey Servlet</servlet-name>
  	<url-pattern>/services/*</url-pattern>
  </servlet-mapping>



	<!-- This Servlet should be considered a webservice as it returns JSON -->
  <servlet>
    <servlet-name>FASTA_upload_servlet</servlet-name>
    <servlet-class>org.yeastrc.nrseq_fasta_importer.www.servlet.UploadFASTAFileServlet</servlet-class>
    <load-on-startup>2</load-on-startup>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>FASTA_upload_servlet</servlet-name>
    <url-pattern>/uploadFASTA</url-pattern>
  </servlet-mapping>


  <!-- Filters - run on each request -->
   

    <!-- filter to set character encoding on each request -->
    
    <filter>
        <filter-name>Set Character Encoding</filter-name>
        <filter-class>org.apache.filters.SetCharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>ignore</param-name>
            <param-value>false</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>Set Character Encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>




	<!-- Servlet Context Listeners.  Called on Web app startup and shutdown -->
	<listener>
		<listener-class>
		org.yeastrc.nrseq_fasta_importer.www.servlet_context.ServletContextAppListener
		</listener-class>
	</listener>
	
	<!-- Commons.fileupload listener to stop: This reaper thread should be stopped, if it is no longer needed. -->
    <listener>
     <listener-class>
      org.apache.commons.fileupload.servlet.FileCleanerCleanup
     </listener-class>
  </listener>
  
  
</web-app>